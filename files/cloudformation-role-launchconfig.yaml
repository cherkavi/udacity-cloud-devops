AWSTemplateFormatVersion: '2010-09-09'

Description: >
    Role and LaunchConfiguration for LoadBalancer

Parameters:

  VpcName:
    Type: String
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9\-]*'
    MinLength: 1
    MaxLength: 25
    Default: udacity-ht-03
    Description: prefix for all of elements in Stack

  VpcNetworkMask:
    Type: String
    AllowedPattern: '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\/[0-9]{1,2}'
    MinLength: 9
    MaxLength: 20
    Description: vpc network mask 
    Default: 10.0.0.0/16

  # Template format error: Every Default member must be a string.
  # VpcId:
  #   Type: String
  #   # Fn::ImportValue: !Sub "${VpcName}"
  #   Default: !ImportValue udacity-network-01

Resources:
  # Role with inline policy 
  # for EC2, ReadOnly access from S3 
  Role4EC2allowS3:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "Ec2S3"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: "Allow"
          Principal:
            Service: "ec2.amazonaws.com"
          Action: "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: "S3RO"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
            - Effect: "Allow"
              Action:
                - s3:Get*
                - s3:List*
              Resource: "arn:aws:s3:::*/*"

  # SecurityGroup
  # Out:80, In: All
  SecurityGroupOut80InAll:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http
      # ----------------
      # > Value of property VpcId must be of type String
      # - Fn::ImportValue: "udacity-network-01"
      #^^^ !!! PLEASE, don't use minus-char before !!! 
      # ----------------
      # > Template format error: [/Resources/SecurityGroupOut80InAll/Properties/VpcId/0] map keys must be strings; received a map instead
      # - !Ref Fn::ImportValue: "udacity-network-01"
      # ----------------
      # > Template format error: [/Resources/SecurityGroupOut80InAll/Properties/VpcId/0/Fn::GetAtt/0] map keys must be strings; received a map instead
      # - Fn::GetAtt:
      #   - !Ref Fn::ImportValue: "udacity-network-01"
      #   - "Id"
      # ---------------
      # >  map keys must be strings; received a map instead
      # - Fn::Select:
      #   - 1
      #   - !Ref Fn::ImportValue: "udacity-network-01"
      VpcId: 
        Fn::ImportValue: !Sub "${VpcName}"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: -1
        FromPort: -1
        ToPort: -1
        CidrIp: 0.0.0.0/0

  # SecurityGroup
  # In:80, Out: 80
  SecurityGroupOut80In80:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http
      VpcId: 
        Fn::ImportValue: !Sub "${VpcName}"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: !Ref VpcNetworkMask
